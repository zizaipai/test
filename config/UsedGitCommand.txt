1、配置  
    git config
    设置：git config --global user.name "Your Name"
    查看：git config user.name
    
2、初始化Git仓库
    git init
    
3、添加文件
    git add
    
4、提交
    git commit -m "Your comment."
    
5、查看状态
    git status
    
6、查看不同
    git diff filename
    
7、查看日志
    git log
    git log --pretty=oneline 一行显示日志
	git log --graph --pretty=oneline --abbrev-commit 查看分支的合并情况
    git reflog 查看所有的记录日志，包括撤销操作
    
8、删除文件 
	rm -f file
    git rm file 提交删除
    
9、还原到某个版本
    git reset --hard HEAD^  恢复到当前最新版本
    git reset ID 恢复到指定版本
    
10、本地仓库、关联远程仓库
    git remote add origin https://github.com/WhyNoDoIt/test.git  
    其中origin 是https://github.com/WhyNoDoIt/test.git 在本地的别名。
    
11、提交到远程仓库
    git push origin master
    第一次提交需要使用-u 参数： git push -u origin master; master 是当前主分支名。
    
12、获取远程库信息
    git pull origin master
    
13、迁出一个分支的特定版本
	git checkout master     //取出master版本的head。
	git checkout tag_name    //在当前分支上 取出 tag_name 的版本
	git checkout  master file_name  //放弃当前对文件file_name的修改
	git checkout  commit_id file_name  //取文件file_name的 在commit_id时的版本。commit_id为 git commit 时的sha值。
	
14、创建分支
	git checkout -b dev 相当于下面两个命令
	git branch dev
	git checkout dev
	git push origin dev 将本地分支dev提交到远程库

15、合并分支
	先进入到master分支（git checkout master）,再执行如下命令合并。
	git merge dev （这种方式是fast-forward） git log时看不到合并记录，若要记录合并日志，则使用下面的命令：
	git merge --no-off -m "merge with no-off" dev
	
	

16、删除分支
	git branch -d dev 如果当前分支已经提交到远程库，执行此命令只会删除本地的dev分支，不会删除远程分支。
	git push origin :dev 执行此命令才会删除远程分支。
	
17、git remote -v  //查看你当前项目远程连接的是哪个仓库地址。	

18、 避免每次https 方式提交都要输入密码
	C:/Users/Adminastrator/ 目录下创建.git-credentials文件，添加如下内容：https://Your Username:Your password@github.com
	再执行如下命令：
	git config --global credential.helper store
	在重新启动Git Bash。 OK 现在https方式提交也不用输入用户名密码了。




















